{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "keyVaultName": {
         "type": "string",
         "minLength": 1
      },
      "deploymentBlobContainerUri": {
         "type": "string",
         "minLength": 1,
         "metadata": {
            "description": "URI of the Azure Storage Container that contains all deployment templates."
         }
      },
      "deploymentDateTimeStamp": {
         "type": "string",
         "minLength": 1,
         "metadata": {
            "description": "Date Timestamp that is used as postfix for the various deployments."
         }
      },
      "deploymentBlobContainerSasToken": {
         "type": "string",
         "minLength": 1,
         "metadata": {
            "description": "SAS token of the Azure Storage Container that contains all deployment templates."
         }
      },
      "inputApiUrl": {
         "type": "string",
         "minLength": 1
      },
      "outputApiUrl": {
         "type": "string",
         "minLength": 1
      }
   },
   "variables": {
      "applicationInsightsDeploymentName": "[concat('lauris-function-ai-', parameters('deploymentDateTimeStamp'))]",
      "appServicePlanDeploymentName": "[concat('lauris-aso-', parameters('deploymentDateTimeStamp'))]",
      "functionDeploymentName": "[concat('lauris-function-', parameters('deploymentDateTimeStamp'))]",
      "functionIdentityPolicyDeploymentName": "[concat('lauris-function-kv-access-policy-', parameters('deploymentDateTimeStamp'))]",
      "functionStorageAccountDeploymentName": "[concat('laurisfunctionsa-', parameters('deploymentDateTimeStamp'))]"
   },
   "resources": [
      {
         "apiVersion": "2019-05-01",
         "name": "[variables('appServicePlanDeploymentName')]",
         "type": "Microsoft.Resources/deployments",
         "resourceGroup": "lauris-functions",
         "properties": {
            "mode": "Incremental",
            "templateLink": {
               "uri": "[concat(parameters('deploymentBlobContainerUri'), '/templates/Bachelor.Function.Resources/lauris-asp.json', parameters('deploymentBlobContainerSasToken'))]",
               "contentVersion": "1.0.0.0"
            },
            "parameters": {}
         },
         "dependsOn": []
      },
      {
         "apiVersion": "2019-05-01",
         "name": "[variables('applicationInsightsDeploymentName')]",
         "type": "Microsoft.Resources/deployments",
         "resourceGroup": "lauris-functions",
         "properties": {
            "mode": "Incremental",
            "templateLink": {
               "uri": "[concat(parameters('deploymentBlobContainerUri'), '/templates/Bachelor.Function.Resources/lauris-function-ai.json', parameters('deploymentBlobContainerSasToken'))]",
               "contentVersion": "1.0.0.0"
            },
            "parameters": {}
         },
         "dependsOn": []
      },
      {
         "apiVersion": "2019-05-01",
         "name": "[variables('functionStorageAccountDeploymentName')]",
         "type": "Microsoft.Resources/deployments",
         "resourceGroup": "lauris-functions",
         "properties": {
            "mode": "Incremental",
            "templateLink": {
               "uri": "[concat(parameters('deploymentBlobContainerUri'), '/templates/Bachelor.Function.Resources/laurisfunctionsa.json', parameters('deploymentBlobContainerSasToken'))]",
               "contentVersion": "1.0.0.0"
            },
            "parameters": {}
         },
         "dependsOn": []
      },
      {
         "apiVersion": "2019-05-01",
         "name": "[variables('functionDeploymentName')]",
         "type": "Microsoft.Resources/deployments",
         "resourceGroup": "lauris-functions",
         "properties": {
            "mode": "Incremental",
            "templateLink": {
               "uri": "[concat(parameters('deploymentBlobContainerUri'), '/templates/Bachelor.Function.Resources/lauris-function.json', parameters('deploymentBlobContainerSasToken'))]",
               "contentVersion": "1.0.0.0"
            },
            "parameters": {
               "functionAppStorageAccountName": {
                  "value": "[reference(variables('functionStorageAccountDeploymentName')).outputs.functionAppStorageAccountName.value]"
               },
               "functionAppConsumptionPlanName": {
                  "value": "[reference(variables('appServicePlanDeploymentName')).outputs.functionAppConsumptionPlanName.value]"
               },
               "keyVaultName": {
                  "value": "[parameters('keyVaultName')]"
               },
               "deploymentBlobContainerUri": {
                  "value": "[parameters('deploymentBlobContainerUri')]"
               },
               "deploymentBlobContainerSasToken": {
                  "value": "[parameters('deploymentBlobContainerSasToken')]"
               },
               "inputApiUrl": {
                  "value": "[parameters('inputApiUrl')]"
               },
               "outputApiUrl": {
                  "value": "[parameters('outputApiUrl')]"
               },
               "applicationInsightsInstrumentationkey": {
                  "value": "[reference(variables('applicationInsightsDeploymentName')).outputs.applicationInsightsInstrumentationkey.value]"
               }
            }
         },
         "dependsOn": [
            "[variables('applicationInsightsDeploymentName')]",
            "[variables('appServicePlanDeploymentName')]",
            "[variables('functionStorageAccountDeploymentName')]"
         ]
      },
      {
         "apiVersion": "2019-05-01",
         "name": "[variables('functionIdentityPolicyDeploymentName')]",
         "type": "Microsoft.Resources/deployments",
         "resourceGroup": "lauris-shared",
         "properties": {
            "mode": "Incremental",
            "templateLink": {
               "uri": "[concat(parameters('deploymentBlobContainerUri'), '/templates/Bachelor.Function.Resources/lauris-function-kv-access-policy.json', parameters('deploymentBlobContainerSasToken'))]",
               "contentVersion": "1.0.0.0"
            },
            "parameters": {
               "keyVaultName": {
                  "value": "[parameters('keyVaultName')]"
               },
               "managedIdentityId": {
                  "value": "[reference(variables('functionDeploymentName')).outputs.managedIdentityId.value]"
               }
            }
         },
         "dependsOn": [
            "[variables('functionDeploymentName')]"
         ]
      }
   ],
   "outputs": {}
}